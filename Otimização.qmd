---
title: "Otimizacao de carteiras"
author: "Marcus Ramalho"
format: html
editor: visual
---

## Introdução à otimização de carteiras com R

## Função de utilidade quadrática

A função de utilidade quadrática é usada na otimização de portfólios para encontrar a alocação de ativos que maximiza o retorno esperado e minimiza o risco. A função de utilidade quadrática é dada por:

$U = \mu^T w - \lambda \sigma^2$

onde:

- $U$ é a função de utilidade
- $\mu^T$ é o vetor de retornos esperados
- $w$ é o vetor de pesos dos ativos
- $\lambda$ é o fator de aversão ao risco

generalizando para o caso de $n$ ativos, a função de utilidade quadrática é dada por:

$U = \mu^T w - \lambda w^T \Sigma w$

onde:

- $\Sigma w$ é a matriz de covariância dos retornos dos ativos
- $w^T$ é o vetor transposto de pesos dos ativos
- $w$ é o vetor de pesos dos ativos
- $\lambda$ é o fator de aversão ao risco
- $\mu$ é o vetor de retornos esperados
- $U$ é a função de utilidade

A otimização de portfólios é um problema de maximização da função de utilidade quadrática sujeita a restrições, como a soma dos pesos dos ativos deve ser igual a 1 e os pesos dos ativos devem ser maiores ou iguais a zero.

## Primeiro vamos carregar os pacotes necessários

```{r}
#| message: false
#| warning: false
#| error: false
#| echo: false

# Lista de pacotes necessários
pacotes <- c("tidyverse", "PortfolioAnalytics", "quantmod", "ROI", "ROI.plugin.quadprog", "ROI.plugin.glpk", "timetk", "PerformanceAnalytics")

# Verifica se os pacotes estão instalados, instala os que faltam
for (pacote in pacotes) {
  if (!require(pacote, character.only = TRUE)) {
    install.packages(pacote)
    library(pacote, character.only = TRUE)
  }
}

```

## Ativos selecionados 

```{r}

# Ativos selecionados

tickers <- c("VALE3.SA","PETR4.SA","AZUL4.SA","MGLU3.SA", "CMIG4.SA")

prices <- 
  getSymbols(tickers, 
             src = 'yahoo', 
             from = "2019-05-30",
             to = "2024-05-30",
             auto.assign = TRUE, #obs auto asign carrega os resultados para o ambiente
             warnings = FALSE,) %>% 
  map(~Ad(get(.))) %>% 
  reduce(merge) %>%
  `colnames<-`(tickers)

head(prices)
class(prices)
```

## Baixando os preços do benchmark 

```{r}
# Baixando os preços do IBOV

ibov <- getSymbols("^BVSP", 
                   src = 'yahoo', 
                   from = "2019-05-30",
                   to = "2024-05-30",
                   auto.assign = TRUE, 
                   warnings = FALSE) %>% 
  map(~Ad(get(.))) %>% 
  reduce(merge) %>% 
  `colnames<-`("IBOV")

head(ibov)

```

## Agora vamos converter os preços diários em mensais

```{r}
#| echo: true
#| message: false


prices_monthly <- to.monthly(prices, indexAt = "lastof", OHLC = FALSE)
head(prices_monthly)

ibov_monthly <- to.monthly(ibov, indexAt = "lastof", OHLC = FALSE)
head(ibov_monthly)
```

## Vamos calcular os retornos mensais

```{r}
asset_returns_xts <-
 PerformanceAnalytics::Return.calculate(prices_monthly, 
                   method = "discrete") %>% 
  na.omit()

ibov_returns_xts <- 
  PerformanceAnalytics::Return.calculate(ibov_monthly, 
                   method = "discrete") %>% 
  na.omit()

head(asset_returns_xts)
head(ibov_returns_xts)
```

## Otimização da carteira

```{r}

#| message: false

# Criando o objeto de otimização

portf <- portfolio.spec(assets = colnames(asset_returns_xts))

# Adicionando restrições, como por exemplo, a soma dos pesos dos ativos deve ser igual a 1

portf <- add.constraint(portf, type = "full_investment")

# Adicionando restrição de peso mínimo e máximo para cada ativo
# Neste caso, o peso mínimo é 0 e o peso máximo é 1

portf <- add.constraint(portf, type = "long_only")


# Adiciona a função objetivo, que é minimizar o desvio padrão da carteira

portf <- add.objective(portf, type = "risk", name = "StdDev")

# Resolve o problema de otimização

opt_portf <- optimize.portfolio(asset_returns_xts, portf, optimize_method = "ROI")

```

## Resultados da otimização

```{r}

opt_portf

```

## Extraindo os pesos dos ativos

```{r}


# extraindo os pesos para um data frame
weights <- extractWeights(opt_portf)

# Adicionando os nomes dos ativos sem colocá-los no índice
weights <- data.frame(tickers = colnames(asset_returns_xts), weights, row.names = NULL)

weights




```

## plotando com o portfolioAnalytics

```{r}

chart.Weights(opt_portf)

```

## Plotando com ggplo2

```{r}

ggplot(weights, aes(x = reorder(tickers, weights), y = weights, fill = tickers)) +
  geom_col(color = "black", show.legend = FALSE) +
  theme_minimal(base_size = 14) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1),
    plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5, size = 16),
    legend.position = "none") +
  scale_fill_viridis_d() +
  labs(title = "Distribuição dos Pesos dos Ativos",
   x = "Ativos",
   y = "Pesos") +
  coord_flip()

```


## Realizando otimização da função de utilidade com o PortfolioAnalytics

```{r}

#criar o objeto de otimização

portf <- portfolio.spec(assets = colnames(asset_returns_xts))

# Adicionando restrições, como por exemplo, a soma dos pesos dos ativos deve ser igual a 1

portf <- add.constraint(portf, type = "full_investment")

# Adicionando restrição de peso mínimo e máximo para cada ativo (0-1)

portf <- add.constraint(portf, type = "long_only")

# Adiciona a função objetivo, que é maximizar o retorno esperado

portf <- add.objective(portf, type = "return", name = "mean")

# Adiciona a função objetivo, que é minimizar a variância da carteira

portf <- add.objective(portf, type = "risk", name = "var")

portf <- add.objective(portf, type = "quadratic_utility", risk_aversion = 10)

# Resolve o problema de otimização

opt_portf <- optimize.portfolio(asset_returns_xts, portf, optimize_method = "ROI")

# Extraindo os pesos dos ativos

extractWeights(opt_portf)

```

## Pesos

```{r}


extractWeights(opt_portf)

```

## Entendendo a especificação do portfólio

O objeto de portfólio é uma lista que contém as seguintes informações:

- **assets**: vetor de nomes dos ativos
- **constraints**: lista de restrições
  - **weight_sum**: restrição de que a soma dos pesos dos ativos deve ser igual a um valor específico
  - **full_investment**: restrição de que a soma dos pesos dos ativos deve ser igual a 1
  - **dollar_neutral**: restrição de que a soma dos pesos dos ativos deve ser igual a zero
  - **box**: restrição de que os pesos dos ativos devem estar dentro de um intervalo específico
  - **long_only**: restrição de que os pesos dos ativos devem ser maiores ou iguais a zero e menores ou iguais a um (caso especial da restrição box)
  - **group**: restrição de que os pesos dos ativos de um grupo específico devem ser iguais
  - **turnover**: restrição de que o turnover da carteira deve ser menor ou igual a um valor específico a partir de uma carteira inicial
  - **diversification**: Especifica um valor de diversificação para a carteira
  - **position_limit**: Permite ao usuário definir o número máximo de posições (ativos com pesos não nulos) e o número máximo de posições compradas e vendidas.
  - **return**: Especifica o retorno médio esperado da carteira
  - **factor_exposure**: Especifica a exposição da carteira a fatores de risco
  - **leverage_exposure**: Especifica a alavancagem maxima da carteira onde a alavancagem é definida como a soma dos pesos absolutos dos ativos
- **objectives**: 
  - **type**: 'return','risk', 'risk_budget', 'quadratic_utility', or 'weight_concentration

## Passo a passo da otimização de portfólios

1. Carregar os preços dos ativos e do benchmark
2. Converter os preços diários em preços mensais
3. Calcular os retornos mensais dos ativos e do benchmark
4. **Criar o objeto de portfólio**
5. **Adicionar restrições ao objeto de portfólio**
6. **Adicionar a função objetivo ao objeto de portfólio**
7. **Resolver o problema de otimização**
8. **Exibir os resultados da otimização**
9. **Exibir os pesos dos ativos na carteira otimizada**
10. **Plotar a distribuição dos pesos dos ativos na carteira otimizada**

## Criando um objeto para as especificações do portfólio

```{r}

# Criando o objeto de portfólio, aqui estamos apenas especificando os ativos que serão utilizados na otimização

portfs <- portfolio.spec(assets = colnames(asset_returns_xts))


```

## Adicionando restrições ao objeto de portfólio

As restrições são condições que devem ser satisfeitas durante a otimização da carteira. Algumas restrições comuns são relacionadas ao peso dos ativos e ao retorno esperado da carteira.

```{r}

# Adicionando restrições, como por exemplo, a soma dos pesos dos ativos deve ser igual a 1

portfs  <- add.constraint(portfs, type = "weight_sum", min_sum = 1, max_sum = 1)

# adicionnando uma restrição de caixas para os pesos dos ativos

portfs <- add.constraint(portfs, type = "box", min = c(0.1, 0.1, 0.1, 0.1, 0.1), max = 0.4)

# Adicionando uma restrição de grupo, onde os pesos dos ativos de um grupo específico devem ser iguais

portfs <- add.constraint(portfolio = portfs, type = "group", groups = list(c(1, 2, 5), c(3, 4, 5)), group_min = 0.4, group_max = 0.6)

print(portfs)


```

## Adicionando a função objetivo ao objeto de portfólio

A função objetivo é a função que será otimizada durante o processo de otimização da carteira. Um objetivo comum é maximizar o retorno esperado da carteira e minimizar a volatilidade e o risco.

Lembre-se que o desvio padrão é a raiz quadrada da variância. E que a variância é a média dos quadrados dos desvios em relação à média. 
A variancia é geralmente usada para denotar o risco, quanto maior a variancia, maior o risco. Já geralmente denota a volatilidade, quanto maior o desvio padrão, maior a volatilidade.

No portfolioAnalytics, a função objetivo é adicionada ao objeto de portfólio usando a função `add.objective()`. Os objetivos mais usado são:

- **return**: Maximizar o retorno esperado da carteira
- **risk**: Minimizar o risco da carteira
- **risk_budget**: Minimizar  a contribuição marginal do risco de cada ativo para o risco total da carteira
- **quadratic_utility**: Maximizar a função de utilidade quadrática da carteira
- **weight_concentration**: Minimizar a concentração dos pesos dos ativos na carteira

```{r}

```
